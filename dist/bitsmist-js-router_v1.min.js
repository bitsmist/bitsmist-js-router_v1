!function(){"use strict";function e(e,r){void 0===r&&(r={});for(var i=function(e){for(var t=[],r=0;r<e.length;){var i=e[r];if("*"!==i&&"+"!==i&&"?"!==i)if("\\"!==i)if("{"!==i)if("}"!==i)if(":"!==i)if("("!==i)t.push({type:"CHAR",index:r,value:e[r++]});else{var n=1,o="";if("?"===e[s=r+1])throw new TypeError('Pattern cannot start with "?" at '+s);for(;s<e.length;)if("\\"!==e[s]){if(")"===e[s]){if(0==--n){s++;break}}else if("("===e[s]&&(n++,"?"!==e[s+1]))throw new TypeError("Capturing groups are not allowed at "+s);o+=e[s++]}else o+=e[s++]+e[s++];if(n)throw new TypeError("Unbalanced pattern at "+r);if(!o)throw new TypeError("Missing pattern at "+r);t.push({type:"PATTERN",index:r,value:o}),r=s}else{for(var a="",s=r+1;s<e.length;){var u=e.charCodeAt(s);if(!(u>=48&&u<=57||u>=65&&u<=90||u>=97&&u<=122||95===u))break;a+=e[s++]}if(!a)throw new TypeError("Missing parameter name at "+r);t.push({type:"NAME",index:r,value:a}),r=s}else t.push({type:"CLOSE",index:r,value:e[r++]});else t.push({type:"OPEN",index:r,value:e[r++]});else t.push({type:"ESCAPED_CHAR",index:r++,value:e[r++]});else t.push({type:"MODIFIER",index:r,value:e[r++]})}return t.push({type:"END",index:r,value:""}),t}(e),n=r.prefixes,o=void 0===n?"./":n,a="[^"+t(r.delimiter||"/#?")+"]+?",s=[],u=0,l=0,c="",p=function(e){if(l<i.length&&i[l].type===e)return i[l++].value},f=function(e){var t=p(e);if(void 0!==t)return t;var r=i[l],n=r.type,o=r.index;throw new TypeError("Unexpected "+n+" at "+o+", expected "+e)},d=function(){for(var e,t="";e=p("CHAR")||p("ESCAPED_CHAR");)t+=e;return t};l<i.length;){var h=p("CHAR"),_=p("NAME"),g=p("PATTERN");if(_||g){var m=h||"";-1===o.indexOf(m)&&(c+=m,m=""),c&&(s.push(c),c=""),s.push({name:_||u++,prefix:m,suffix:"",pattern:g||a,modifier:p("MODIFIER")||""})}else{var v=h||p("ESCAPED_CHAR");if(v)c+=v;else if(c&&(s.push(c),c=""),p("OPEN")){m=d();var R=p("NAME")||"",S=p("PATTERN")||"",w=d();f("CLOSE"),s.push({name:R||(S?u++:""),pattern:R&&!S?a:S,prefix:m,suffix:w,modifier:p("MODIFIER")||""})}else f("END")}}return s}function t(e){return e.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1")}function r(e){return e&&e.sensitive?"":"i"}function i(i,n,o){return function(e,i,n){void 0===n&&(n={});for(var o=n.strict,a=void 0!==o&&o,s=n.start,u=void 0===s||s,l=n.end,c=void 0===l||l,p=n.encode,f=void 0===p?function(e){return e}:p,d="["+t(n.endsWith||"")+"]|$",h="["+t(n.delimiter||"/#?")+"]",_=u?"^":"",g=0,m=e;g<m.length;g++){var v=m[g];if("string"==typeof v)_+=t(f(v));else{var R=t(f(v.prefix)),S=t(f(v.suffix));if(v.pattern)if(i&&i.push(v),R||S)if("+"===v.modifier||"*"===v.modifier){var w="*"===v.modifier?"?":"";_+="(?:"+R+"((?:"+v.pattern+")(?:"+S+R+"(?:"+v.pattern+"))*)"+S+")"+w}else _+="(?:"+R+"("+v.pattern+")"+S+")"+v.modifier;else _+="("+v.pattern+")"+v.modifier;else _+="(?:"+R+S+")"+v.modifier}}if(c)a||(_+=h+"?"),_+=n.endsWith?"(?="+d+")":"$";else{var y=e[e.length-1],I="string"==typeof y?h.indexOf(y[y.length-1])>-1:void 0===y;a||(_+="(?:"+h+"(?="+d+"))?"),I||(_+="(?="+h+"|"+d+")")}return new RegExp(_,r(n))}(e(i,o),n,o)}function n(e,t,o){return e instanceof RegExp?function(e,t){if(!t)return e;for(var r=/\((?:\?<(.*?)>)?(?!\?)/g,i=0,n=r.exec(e.source);n;)t.push({name:n[1]||i++,prefix:"",suffix:"",modifier:"",pattern:""}),n=r.exec(e.source);return e}(e,t):Array.isArray(e)?function(e,t,i){var o=e.map((function(e){return n(e,t,i).source}));return new RegExp("(?:"+o.join("|")+")",r(i))}(e,t,o):i(e,t,o)}class o extends BITSMIST.v1.Organizer{static init(e,t){Object.defineProperty(e,"routeInfo",{get(){return this._routeInfo}}),Object.defineProperty(e,"specs",{get(){return this._specs}}),Object.defineProperty(e,"spec",{get(){return this._spec}}),e.loadParameters=function(e){return o._loadParameters(e)},e.switchSpec=function(e){return o._switchSpec(this,e)},e.openRoute=function(e,t){return o._open(this,e,t)},e.jumpRoute=function(e,t){return o._jumpRoute(this,e,t)},e.updateRoute=function(e,t){return o._updateRoute(this,e,t)},e.refreshRoute=function(e,t){return o._refreshRoute(this,e,t)},e.replaceRoute=function(e,t){return o._replaceRoute(this,e,t)},e.validateRoute=function(){return o._validateRoute(this)},e.normalizeRoute=function(){return o._normalizeRoute(this)},e._routes=[],e._specs={},e._spec=new BITSMIST.v1.ChainableStore({chain:e.settings,writeThrough:!0}),Object.defineProperty(e,"settings",{get(){return this._spec}}),o.__initPopState(e),history.replaceState(o.__getState("connect"),null,null)}static organize(e,t,r){o.__loadAttrSettings(t);let i=r.routes;if(i)for(let e=0;e<i.length;e++)o._addRoute(t,i[e]);t._routeInfo=o.__loadRouteInfo(t,window.location.href);let n=t.settings.get("specs");n&&Object.keys(n).forEach((e=>{t._specs[e]=n[e]}))}static _addRoute(e,t,r){let i=[],o={origin:t.origin,name:t.name,path:t.path,keys:i,specName:t.specName,componentName:t.componentName,re:n(t.path,i)};r?e._routes.unshift(o):e._routes.push(o)}static _buildUrl(e,t,r){let i="";if(i+=t.url?t.url:"",i+=t.path?t.path:"",i+=t.query?"?"+t.query:"",t.queryParameters){let n={};r&&r.mergeParameters&&(n=Object.assign(n,e.routeInfo.queryParameters)),n=Object.assign(n,t.queryParameters),i+=o._buildUrlQuery(n)}return i||"/"}static _buildUrlQuery(e){let t="";return e&&(t=Object.keys(e).reduce(((t,r)=>(Array.isArray(e[r])?t+=encodeURIComponent(r)+"="+encodeURIComponent(e[r].join())+"&":e[r]&&(t+=encodeURIComponent(r)+"="+encodeURIComponent(e[r])+"&"),t)),"")),t?"?"+t.slice(0,-1):""}static _loadParameters(e){e=e||window.location.href;let t,r,i={};if(window.location.href.indexOf("?")>-1){let n=e.slice(e.indexOf("?")+1).split("&");for(let e=0;e<n.length;e++)t=n[e].split("="),r=t[1]?t[1].split("#")[0]:t[1],i[t[0]]=decodeURIComponent(r)}return i}static _switchSpec(e,t){return BITSMIST.v1.Util.assert(t,"RouteOrganizer._switchSpec(): A spec name not specified.",TypeError),Promise.resolve().then((()=>{if(!e._specs[t])return o.__loadSpec(e,t,e.settings.get("system.specPath")).then((r=>{e._specs[t]=r}))})).then((()=>{e._spec.items=e._specs[t]})).then((()=>e.addOrganizers(e._specs[t]))).then((()=>e.callOrganizers("afterSpecLoad",e._specs[t]))).then((()=>e.trigger("afterSpecLoad",{spec:e._specs[e._routeInfo.specName]})))}static _open(e,t,r){r=Object.assign({},r);let i,n,a=BITSMIST.v1.Util.safeGet(r,"pushState",!!t),s=e._routeInfo;if(t?(i=o._buildUrl(e,t,r),n=o.__loadRouteInfo(e,i)):(i=window.location.href,n=s),!r.jump&&n.name&&s.specName==n.specName)return Promise.resolve().then((()=>{a&&history.pushState(o.__getState("_open.pushState"),null,i),e._routeInfo=n})).then((()=>{if(s.specName!=n.specName)return o._updateRoute(e,s,n,r)})).then((()=>o._validateRoute(e,i))).then((()=>o._refreshRoute(e,n,r))).then((()=>o._normalizeRoute(e,window.location.href)));o._jumpRoute(e,{url:i})}static _jumpRoute(e,t,r){let i=o._buildUrl(e,t,r);window.location.href=i}static _updateRoute(e,t,r,i){return Promise.resolve().then((()=>e.changeState("routing"))).then((()=>e.clearOrganizers("afterStart",e._specs[t.specName]))).then((()=>e.clearOrganizers("afterSpecLoad",e._specs[t.specName]))).then((()=>o._switchSpec(e,r.specName))).then((()=>e._postStart()))}static _refreshRoute(e,t,r){return e.refresh()}static _replaceRoute(e,t,r){history.replaceState(o.__getState("replaceRoute",window.history.state),null,o._buildUrl(e,t,r)),e._routeInfo=o.__loadRouteInfo(e,window.location.href)}static _validateRoute(e,t){return e.validationResult.result=!0,Promise.resolve().then((()=>e.trigger("beforeValidate"))).then((()=>e.callOrganizers("doCheckValidity",{item:o._loadParameters(t),validationName:e.settings.get("settings.validationName")}))).then((()=>{if(!e.validationResult.result&&e.settings.get("settings.autoFixURL"))return o.__fixRoute(e,t)})).then((()=>e.trigger("doValidateURL"))).then((()=>e.trigger("afterValidate"))).then((()=>{if(!e.validationResult.result)throw o.__dumpValidationErrors(e),new URIError("URL validation failed.")}))}static _normalizeRoute(e,t){return Promise.resolve().then((()=>e.trigger("beforeNormalizeURL"))).then((()=>e.trigger("doNormalizeURL"))).then((()=>e.trigger("afterNormalizeURL")))}static __loadAttrSettings(e){let t=e.getAttribute("bm-specpath");t&&e.settings.set("system.specPath",t)}static __loadSpec(e,t,r){let i,n=[];return n.push(e.loadSettingFile(t,r,"js")),Promise.all(n).then((e=>(i=e[0],i)))}static __loadRouteInfo(e,t){let r,i,n={},a=new URL(t,window.location.href),s={};for(let t=e._routes.length-1;t>=0;t--){if(e._routes[t].origin&&a.origin!=e._routes[t].origin)continue;let n=e._routes[t].path?e._routes[t].re.exec(a.pathname):[];if(n){r=e._routes[t].name,i=e._routes[t].specName?e._routes[t].specName:"";for(let r=0;r<n.length-1;r++){s[e._routes[t].keys[r].name]=n[r+1];let o=e._routes[t].keys[r].name,a=n[r+1];i=i.replace("{{:"+o+"}}",a)}break}}return n.name=r,n.specName=i,n.url=a.href,n.path=a.pathname,n.query=a.search,n.parsedUrl=a,n.routeParameters=s,n.queryParameters=o._loadParameters(t),n}static __initPopState(e){window.addEventListener("popstate",(t=>Promise.resolve().then((()=>e.trigger("beforePopState"))).then((()=>o._open(e,{url:window.location.href},{pushState:!1}))).then((()=>e.trigger("afterPopState")))))}static __getState(e,t){let r={msg:e};return t&&(r=Object.assign({},t,r)),r}static __fixRoute(e,t){let r=!0,i=o._loadParameters(t);Object.keys(e.validationResult.invalids).forEach((t=>{let n=e.validationResult.invalids[t];void 0!==n.fix?i[n.key]=n.fix:"notAllowed"===n.failed[0].validity?delete i[n.key]:r=!1})),r&&(o._replaceRoute(e,{queryParameters:i}),e.validationResult.result=!0)}static __dumpValidationErrors(e){Object.keys(e.validationResult.invalids).forEach((t=>{let r=e.validationResult.invalids[t];if(r.failed)for(let e=0;e<r.failed.length;e++);}))}}function a(){return Reflect.construct(BITSMIST.v1.Component,[],this.constructor)}BITSMIST.v1.ClassUtil.inherit(a,BITSMIST.v1.Component),customElements.define("bm-router",a),a.prototype.start=function(e){let t={settings:{name:"Router",autoFixURL:!1,autoFetch:!1,autoSetup:!1,autoPostStart:!1,autoRefresh:!1,hasTemplate:!1,rootElement:document.body,ignoreGlobalSuspend:!0},organizers:{AutoloadOrganizer:{settings:{attach:!1}},RouteOrganizer:{settings:{attach:!0}},ValidationOrganizer:{settings:{attach:!0}}}};return e=e?BITSMIST.v1.Util.deepMerge(t,e):t,Promise.resolve().then((()=>BITSMIST.v1.Component.prototype.start.call(this,e))).then((()=>this.switchSpec(this.routeInfo.specName))).then((()=>this._postStart())).then((()=>this.openRoute()))},window.BITSMIST=window.BITSMIST||{},window.BITSMIST.v1=window.BITSMIST.v1||{},BITSMIST.v1.OrganizerOrganizer.register("RouteOrganizer",{object:o,targetWords:"routes",targetEvents:["beforeStart","afterSpecLoad"],order:900}),window.BITSMIST.v1.Router=a}();
